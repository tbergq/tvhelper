name: CI
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  master:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout [master]
        with:
          fetch-depth: 0
      - name: restore cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: 'master'
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - run: yarn install --immutable
      - run: yarn nx affected --target=build --parallel --max-parallel=3
      - run: yarn nx affected --target=test --parallel --max-parallel=2
      - run: yarn nx affected --target=lint --parallel --max-parallel=2
        env:
          DB_URL_TJ: ${{ secrets.DB_URL_TJ }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          GRAPHQL_URL: ${{ secrets.GRAPHQL_URL }}
          HANDBALL_PLANET_URL: ${{ secrets.HANDBALL_PLANET_URL }}
          HANDBALL_NO: ${{ secrets.HANDBALL_NO }}
          NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
          COMPONENTS_PROJECT_TOKEN: ${{ secrets.COMPONENTS_PROJECT_TOKEN }}
  pr:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: restore cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: 'master'
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - run: yarn install --immutable
      - run: yarn nx affected --target=build --parallel --max-parallel=3
      - run: yarn nx affected --target=test --parallel --max-parallel=2
      - run: yarn nx affected --target=lint --parallel --max-parallel=2
      - name: Publish to Chromatic
        uses: chromaui/action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # ðŸ‘‡ Chromatic projectToken, refer to the manage page to obtain it.
          projectToken: ${{ secrets.COMPONENTS_PROJECT_TOKEN }}
          buildScriptName: 'chromatic:test'
          workingDir: 'apps/storybook'
        env:
          DB_URL_TJ: ${{ secrets.DB_URL_TJ }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          GRAPHQL_URL: ${{ secrets.GRAPHQL_URL }}
          HANDBALL_PLANET_URL: ${{ secrets.HANDBALL_PLANET_URL }}
          HANDBALL_NO: ${{ secrets.HANDBALL_NO }}
          NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
          COMPONENTS_PROJECT_TOKEN: ${{ secrets.COMPONENTS_PROJECT_TOKEN }}
